// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  userName   String       @unique
  role       UserRole     @default(USER)
  status     UserStatus   @default(ACTIVE)
  created    DateTime     @default(now())
  updated    DateTime     @updatedAt
  UserAuth   UserAuth[]
  UserToken  UserToken[]
  Withdrawal Withdrawal[]
  Post       Post[]

  @@map("user")
}

enum UserStatus {
  WITHDRAW
  ACTIVE
  INACTIVE
}

enum UserRole {
  USER
  ADMIN
}

model UserAuth {
  id             Int    @id @default(autoincrement())
  user           User   @relation(fields: [userId], references: [id], map: "user_auth_user_id_fk")
  userId         Int    @unique
  hashedPassword String @db.VarChar(300)

  @@index([userId], map: "user_auth_user_id_fk")
  @@map("user_auth")
}

model UserToken {
  id                 Int     @id @default(autoincrement())
  user               User    @relation(fields: [userId], references: [id], map: "user_token_user_id_fk")
  userId             Int     @unique
  hashedRefreshToken String? @db.VarChar(300)

  @@index([userId], map: "user_token_user_id_fk")
  @@map("user_token")
}

model Withdrawal {
  id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [userId], references: [id], map: "withdrawal_user_id_fk")
  userId  Int      @unique
  text    String?  @default("입력된 내용이 없습니다.") @db.VarChar(1000)
  created DateTime @default(now())

  @@index([userId], map: "withdrawal_user_id_fk")
  @@map("withdrawal")
}

model Post {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id], map: "post_user_id_fk")
  userId    Int
  title     String      @db.VarChar(200)
  content   String      @db.VarChar(1000)
  created   DateTime    @default(now())
  updated   DateTime    @updatedAt
  PostImage PostImage[]

  @@index([userId], map: "post_user_id_fk")
  @@map("post")
}

model PostImage {
  id        Int    @id @default(autoincrement())
  post      Post?  @relation(fields: [postId], references: [id], map: "post_image_post_id_fk")
  postId    Int?
  imagePath String @db.VarChar(400)
  imageType String @db.VarChar(20)
  imageSize Int

  @@index([postId], map: "post_image_post_id_fk")
  @@map("post_image")
}
